{"note":"Don't delete this file! It's used internally to help with page regeneration.","name":"Desant","body":"![Desant](https://dl.dropbox.com/s/jfvo6fsyzgsdaad/head.png)\r\n\r\n<blockquote>\r\n<strong>Desant</strong> /dɛsɑːnt/ is a Polish word for military landing operations aimed \r\nat a bringing the landing force usually via landing craft to a shore or to \r\nland with the purpose of power projection ashore by forces coming usually \r\nfrom ships and also aircraft and able to fight.\r\n</blockquote>\r\n\r\n_Desant_ is an open source, neat landing page application. It's simple to\r\nuse, customize and extend to your needs. There's an awesome admin area\r\ntoo - it will give you all the information and statistics you need.\r\n\r\n## Quick start with Vagrant\r\n\r\nThere's a public Vagrant box configured to run with _Desant_. You can hop\r\ninto the project qucikly by running:\r\n\r\n    $ gem install vagrant # if not installed yet\r\n    $ vagrant up\r\n    $ vagrant ssh\r\n    vagrant@vagrant:~$ cd desant\r\n\r\nNow just go and perform installation and setup steps described below.\r\n\r\n## Installation and setup\r\n\r\nFirst of all, install all the dependencies using _Bundler_:\r\n\r\n    $ bundle\r\n\r\n_Desant_ uses _MySQL_ as backend, so you should have this database installed \r\nand running. If you have it then copy `.env.sample` to `.env` - this file contains i.a. \r\ndatabase configuration and admin setup:\r\n\r\n    $ cp .env.sample .env\r\n\r\nAdmin area uses very simple, single user authentication. Now generate\r\npassword hash for your password:\r\n\r\n    $ rake password_hash PASS=yoursecretpass\r\n    Your password hash: $2a$10$9r64bxHKi3wxFwKDbjZYWOj4M26xp0RM0maoGeRo0JPy6Cg5OrzBC\r\n\r\nCopy generated hash and assign it to `ADMIN_PASSWORD_HASH` in `.env` file,\r\nedit database configuration and other settings.\r\n\r\nLast thing to do is to run create databases and run migrations: \r\n\r\n    $ foreman run rake db:create\r\n    $ foreman run rake db:migrate\r\n\r\nAs you can se, we must use `foreman run` command from now on - it's because\r\nall the stuff which is affected by the database requires its configuration\r\nto be loaded. _Foreman_ automatically loads configuration from the `.env`\r\nfile.\r\n\r\nNow you should be able to start the application, we must use _Foreman_\r\nhere as well.\r\n\r\n    $ foreman start\r\n\r\nIf everything wen fine, you should go to `http://localhost:5000/` and see\r\na demo landing page! Use `http://localhost:5000/admin/` to access admin\r\narea.\r\n\r\nTo run RSpec unit tests use the following rake task:\r\n\r\n    $ foreman run rake spec\r\n\r\nFrontend tests (JavaScript unit tests) runs with:\r\n\r\n    $ foreman run rake spec:jasmine\r\n\r\nYou can also run all the specs together:\r\n\r\n    $ foreman run rake spec:all\r\n    \r\nFor development purposes you can populate dummy data using following\r\nrake task:\r\n\r\n    $ foreman run rake db:populate\r\n\r\n## Design introduction\r\n\r\n_Desant_ is not a Rails app, it's an experiment with full stack, single\r\npage application in _Backbone.js_ managed by _Sinatra_ backend. Here's\r\nthe directory structure explained:\r\n\r\n    apps/                   applications (components actually).\r\n\r\n    apps/*/assets/          asset pipeline files.\r\n    apps/*/assets/static/   static files.\r\n    apps/*/assets/app/      backbone application files.\r\n    apps/*/assets/libs/     javascript libraries.\r\n    apps/*/assets/styles/   stylesheet files.\r\n\r\n    apps/*/forms/           form classes.\r\n    apps/*/helpers/         application specified helpers. \r\n    apps/*/loggers/         custom notification subscribers.\r\n    apps/*/models/          model classes.\r\n    apps/*/presenters/      application presenters.\r\n    apps/*/services/        application service classes.\r\n    apps/*/spec/            application specified test files.  \r\n    apps/*/views/           application view files.\r\n\r\n    config/                 configuration files.\r\n    db/migrate/             database migrations.\r\n    lib/                    libraries and extensions, also app's core files.\r\n    log/                    log files.\r\n    spec/                   global test files.\r\n\r\nProject is booted with `boot.rb` configuration file. All the apps (components)\r\nare routed in config.ru, with standard Rack::Router.\r\n\r\nThe main goal of the experiment was to provide system for easy and robust\r\nwork on _Backbone.js_ application and reusable backend elements. It's also\r\naims to get rid of stupid Rails' assumptions that action = page, and models\r\nare used both in forms and presentations. In _Desant_, **models** are separated\r\nfrom **forms** and **presenters**. Model takes care about business logic, when\r\nforms handle input and presenters output. More sophisticated operations\r\nare handled with **services**. This design makes the stuff easy to test\r\nand reuse across the projects.\r\n\r\n### Coding conventions\r\n\r\nTODO...\r\n\r\n## Screenshots\r\n\r\n![Registered users](https://dl.dropbox.com/s/ss5sbn8e4hh834i/5.png)\r\n\r\n![Locations](https://dl.dropbox.com/s/q6frhrhnrnov8q5/3.png)\r\n\r\n## Copyright\r\n\r\nCopyright (C) 2012 by Chris Kowalik a.k.a nu7hatch <chris@nu7hat.ch>\r\n\r\nThis program is free software: you can redistribute it and/or modify\r\nit under the terms of the GNU Affero General Public License as published by\r\nthe Free Software Foundation, either version 3 of the License, or\r\n(at your option) any later version.\r\n\r\nThis program is distributed in the hope that it will be useful,\r\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\r\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\nGNU Affero General Public License for more details.\r\n\r\nYou should have received a copy of the GNU Affero General Public License\r\nalong with this program. If not, see <http://www.gnu.org/licenses/>.\r\n","google":"UA-33582650-1","tagline":"Open source landing pages system"}